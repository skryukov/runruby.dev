let X=new DataView(new ArrayBuffer);function p(c){return X.buffer!==c.buffer&&(X=new DataView(c.buffer)),X}function Re(c){return c>>>0}const U=new TextDecoder("utf-8"),Ue=new TextEncoder("utf-8");function k(c,e,t){if(typeof c!="string")throw new TypeError("expected a string");if(c.length===0)return R=0,1;let s=0,o=0,r=0;for(;c.length>0;){o=e(o,s,1,s+c.length),s+=c.length;const{read:n,written:i}=Ue.encodeInto(c,new Uint8Array(t.buffer,o+r,s-r));r+=i,c=c.slice(n)}return s>r&&(o=e(o,s,1,r)),R=r,o}let R=0;class ee{constructor(){this.list=[],this.head=0}insert(e){this.head>=this.list.length&&this.list.push({next:this.list.length+1,val:void 0});const t=this.head,s=this.list[t];return this.head=s.next,s.next=-1,s.val=e,t}get(e){if(e>=this.list.length)throw new RangeError("handle index not valid");const t=this.list[e];if(t.next===-1)return t.val;throw new RangeError("handle index not valid")}remove(e){const t=this.get(e),s=this.list[e];return s.val=void 0,s.next=this.head,this.head=e,t}}function M(){throw new RangeError("invalid variant discriminant for bool")}class de{constructor(){this._resource0_slab=new ee,this._resource1_slab=new ee}addToImports(e){"canonical_abi"in e||(e.canonical_abi={}),e.canonical_abi["resource_drop_rb-iseq"]=t=>{this._resource0_slab.remove(t).drop()},e.canonical_abi["resource_clone_rb-iseq"]=t=>{const s=this._resource0_slab.get(t);return this._resource0_slab.insert(s.clone())},e.canonical_abi["resource_get_rb-iseq"]=t=>this._resource0_slab.get(t)._wasm_val,e.canonical_abi["resource_new_rb-iseq"]=t=>(this._registry0,this._resource0_slab.insert(new Te(t,this))),e.canonical_abi["resource_drop_rb-abi-value"]=t=>{this._resource1_slab.remove(t).drop()},e.canonical_abi["resource_clone_rb-abi-value"]=t=>{const s=this._resource1_slab.get(t);return this._resource1_slab.insert(s.clone())},e.canonical_abi["resource_get_rb-abi-value"]=t=>this._resource1_slab.get(t)._wasm_val,e.canonical_abi["resource_new_rb-abi-value"]=t=>(this._registry1,this._resource1_slab.insert(new V(t,this)))}async instantiate(e,t){if(t=t||{},this.addToImports(t),e instanceof WebAssembly.Instance)this.instance=e;else if(e instanceof WebAssembly.Module)this.instance=await WebAssembly.instantiate(e,t);else if(e instanceof ArrayBuffer||e instanceof Uint8Array){const{instance:s}=await WebAssembly.instantiate(e,t);this.instance=s}else{const{instance:s}=await WebAssembly.instantiateStreaming(e,t);this.instance=s}this._exports=this.instance.exports,this._registry0=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-iseq"]),this._registry1=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-abi-value"])}rubyShowVersion(){this._exports["ruby-show-version: func() -> ()"]()}rubyInit(){this._exports["ruby-init: func() -> ()"]()}rubySysinit(e){const t=this._exports.memory,s=this._exports.cabi_realloc,o=e,r=o.length,n=s(0,0,4,r*8);for(let i=0;i<o.length;i++){const a=o[i],l=n+i*8,u=k(a,s,t),f=R;p(t).setInt32(l+4,f,!0),p(t).setInt32(l+0,u,!0)}this._exports["ruby-sysinit: func(args: list<string>) -> ()"](n,r)}rubyOptions(e){const t=this._exports.memory,s=this._exports.cabi_realloc,o=e,r=o.length,n=s(0,0,4,r*8);for(let a=0;a<o.length;a++){const l=o[a],u=n+a*8,f=k(l,s,t),h=R;p(t).setInt32(u+4,h,!0),p(t).setInt32(u+0,f,!0)}const i=this._exports["ruby-options: func(args: list<string>) -> handle<rb-iseq>"](n,r);return this._resource0_slab.remove(i)}rubyScript(e){const t=this._exports.memory,s=this._exports.cabi_realloc,o=k(e,s,t),r=R;this._exports["ruby-script: func(name: string) -> ()"](o,r)}rubyInitLoadpath(){this._exports["ruby-init-loadpath: func() -> ()"]()}rbEvalStringProtect(e){const t=this._exports.memory,s=this._exports.cabi_realloc,o=k(e,s,t),r=R,n=this._exports["rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>"](o,r);return[this._resource1_slab.remove(p(t).getInt32(n+0,!0)),p(t).getInt32(n+4,!0)]}rbFuncallvProtect(e,t,s){const o=this._exports.memory,r=this._exports.cabi_realloc,n=e;if(!(n instanceof V))throw new TypeError("expected instance of RbAbiValue");const i=s,a=i.length,l=r(0,0,4,a*4);for(let f=0;f<i.length;f++){const h=i[f],d=l+f*4,b=h;if(!(b instanceof V))throw new TypeError("expected instance of RbAbiValue");p(o).setInt32(d+0,this._resource1_slab.insert(b.clone()),!0)}const u=this._exports["rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>"](this._resource1_slab.insert(n.clone()),Re(t),l,a);return[this._resource1_slab.remove(p(o).getInt32(u+0,!0)),p(o).getInt32(u+4,!0)]}rbIntern(e){const t=this._exports.memory,s=this._exports.cabi_realloc,o=k(e,s,t),r=R;return this._exports["rb-intern: func(name: string) -> u32"](o,r)>>>0}rbErrinfo(){const e=this._exports["rb-errinfo: func() -> handle<rb-abi-value>"]();return this._resource1_slab.remove(e)}rbClearErrinfo(){this._exports["rb-clear-errinfo: func() -> ()"]()}rstringPtr(e){const t=this._exports.memory,s=e;if(!(s instanceof V))throw new TypeError("expected instance of RbAbiValue");const o=this._exports["rstring-ptr: func(value: handle<rb-abi-value>) -> string"](this._resource1_slab.insert(s.clone())),r=p(t).getInt32(o+0,!0),n=p(t).getInt32(o+4,!0),i=U.decode(new Uint8Array(t.buffer,r,n));return this._exports["cabi_post_rstring-ptr"](o),i}rbVmBugreport(){this._exports["rb-vm-bugreport: func() -> ()"]()}rbGcEnable(){const t=this._exports["rb-gc-enable: func() -> bool"]();return t==0?!1:t==1?!0:M()}rbGcDisable(){const t=this._exports["rb-gc-disable: func() -> bool"]();return t==0?!1:t==1?!0:M()}rbSetShouldProhibitRewind(e){const s=this._exports["rb-set-should-prohibit-rewind: func(new-value: bool) -> bool"](e?1:0);return s==0?!1:s==1?!0:M()}}class Te{constructor(e,t){this._wasm_val=e,this._obj=t,this._refcnt=1,t._registry0.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,this._refcnt!==0)return;this._obj._registry0.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-iseq"],t=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(t)}}class V{constructor(e,t){this._wasm_val=e,this._obj=t,this._refcnt=1,t._registry1.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,this._refcnt!==0)return;this._obj._registry1.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-abi-value"],t=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(t)}}function ke(c,e,t){"rb-js-abi-host"in c||(c["rb-js-abi-host"]={}),c["rb-js-abi-host"]["eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(o,r,n){const i=t("memory"),a=o,l=r,u=U.decode(new Uint8Array(i.buffer,a,l)),h=e.evalJs(u);switch(h.tag){case"success":{const d=h.val;p(i).setInt8(n+0,0,!0),p(i).setInt32(n+4,s.insert(d),!0);break}case"failure":{const d=h.val;p(i).setInt8(n+0,1,!0),p(i).setInt32(n+4,s.insert(d),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["is-js: func(value: handle<js-abi-value>) -> bool"]=function(o){return e.isJs(s.get(o))?1:0},c["rb-js-abi-host"]["instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool"]=function(o,r){return e.instanceOf(s.get(o),s.get(r))?1:0},c["rb-js-abi-host"]["global-this: func() -> handle<js-abi-value>"]=function(){const o=e.globalThis();return s.insert(o)},c["rb-js-abi-host"]["int-to-js-number: func(value: s32) -> handle<js-abi-value>"]=function(o){const r=e.intToJsNumber(o);return s.insert(r)},c["rb-js-abi-host"]["float-to-js-number: func(value: float64) -> handle<js-abi-value>"]=function(o){const r=e.floatToJsNumber(o);return s.insert(r)},c["rb-js-abi-host"]["string-to-js-string: func(value: string) -> handle<js-abi-value>"]=function(o,r){const n=t("memory"),i=o,a=r,l=U.decode(new Uint8Array(n.buffer,i,a)),u=e.stringToJsString(l);return s.insert(u)},c["rb-js-abi-host"]["bool-to-js-bool: func(value: bool) -> handle<js-abi-value>"]=function(o){const r=o,n=e.boolToJsBool(r==0?!1:r==1?!0:M());return s.insert(n)},c["rb-js-abi-host"]["proc-to-js-function: func(value: u32) -> handle<js-abi-value>"]=function(o){const r=e.procToJsFunction(o>>>0);return s.insert(r)},c["rb-js-abi-host"]["rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>"]=function(o){const r=e.rbObjectToJsRbValue(o>>>0);return s.insert(r)},c["rb-js-abi-host"]["js-value-to-string: func(value: handle<js-abi-value>) -> string"]=function(o,r){const n=t("memory"),i=t("cabi_realloc"),a=e.jsValueToString(s.get(o)),l=k(a,i,n),u=R;p(n).setInt32(r+4,u,!0),p(n).setInt32(r+0,l,!0)},c["rb-js-abi-host"]["js-value-to-integer: func(value: handle<js-abi-value>) -> variant { as-float(float64), bignum(string) }"]=function(o,r){const n=t("memory"),i=t("cabi_realloc"),l=e.jsValueToInteger(s.get(o));switch(l.tag){case"as-float":{const u=l.val;p(n).setInt8(r+0,0,!0),p(n).setFloat64(r+8,+u,!0);break}case"bignum":{const u=l.val;p(n).setInt8(r+0,1,!0);const f=k(u,i,n),h=R;p(n).setInt32(r+12,h,!0),p(n).setInt32(r+8,f,!0);break}default:throw new RangeError("invalid variant specified for RawInteger")}},c["rb-js-abi-host"]["export-js-value-to-host: func(value: handle<js-abi-value>) -> ()"]=function(o){e.exportJsValueToHost(s.get(o))},c["rb-js-abi-host"]["import-js-value-from-host: func() -> handle<js-abi-value>"]=function(){const o=e.importJsValueFromHost();return s.insert(o)},c["rb-js-abi-host"]["js-value-typeof: func(value: handle<js-abi-value>) -> string"]=function(o,r){const n=t("memory"),i=t("cabi_realloc"),a=e.jsValueTypeof(s.get(o)),l=k(a,i,n),u=R;p(n).setInt32(r+4,u,!0),p(n).setInt32(r+0,l,!0)},c["rb-js-abi-host"]["js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(o,r){return e.jsValueEqual(s.get(o),s.get(r))?1:0},c["rb-js-abi-host"]["js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(o,r){return e.jsValueStrictlyEqual(s.get(o),s.get(r))?1:0},c["rb-js-abi-host"]["reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(o,r,n,i,a){const l=t("memory"),u=i,f=n,h=[];for(let _=0;_<u;_++){const w=f+_*4;h.push(s.get(p(l).getInt32(w+0,!0)))}const b=e.reflectApply(s.get(o),s.get(r),h);switch(b.tag){case"success":{const _=b.val;p(l).setInt8(a+0,0,!0),p(l).setInt32(a+4,s.insert(_),!0);break}case"failure":{const _=b.val;p(l).setInt8(a+0,1,!0),p(l).setInt32(a+4,s.insert(_),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>"]=function(o,r,n){const i=t("memory"),a=n,l=r,u=[];for(let h=0;h<a;h++){const d=l+h*4;u.push(s.get(p(i).getInt32(d+0,!0)))}const f=e.reflectConstruct(s.get(o),u);return s.insert(f)},c["rb-js-abi-host"]["reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(o,r,n){const i=t("memory"),a=r,l=n,u=U.decode(new Uint8Array(i.buffer,a,l));return e.reflectDeleteProperty(s.get(o),u)?1:0},c["rb-js-abi-host"]["reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(o,r,n,i){const a=t("memory"),l=r,u=n,f=U.decode(new Uint8Array(a.buffer,l,u)),d=e.reflectGet(s.get(o),f);switch(d.tag){case"success":{const b=d.val;p(a).setInt8(i+0,0,!0),p(a).setInt32(i+4,s.insert(b),!0);break}case"failure":{const b=d.val;p(a).setInt8(i+0,1,!0),p(a).setInt32(i+4,s.insert(b),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>"]=function(o,r,n){const i=t("memory"),a=r,l=n,u=U.decode(new Uint8Array(i.buffer,a,l)),f=e.reflectGetOwnPropertyDescriptor(s.get(o),u);return s.insert(f)},c["rb-js-abi-host"]["reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>"]=function(o){const r=e.reflectGetPrototypeOf(s.get(o));return s.insert(r)},c["rb-js-abi-host"]["reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(o,r,n){const i=t("memory"),a=r,l=n,u=U.decode(new Uint8Array(i.buffer,a,l));return e.reflectHas(s.get(o),u)?1:0},c["rb-js-abi-host"]["reflect-is-extensible: func(target: handle<js-abi-value>) -> bool"]=function(o){return e.reflectIsExtensible(s.get(o))?1:0},c["rb-js-abi-host"]["reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>"]=function(o,r){const n=t("memory"),i=t("cabi_realloc"),l=e.reflectOwnKeys(s.get(o)),u=l.length,f=i(0,0,4,u*4);for(let h=0;h<l.length;h++){const d=l[h],b=f+h*4;p(n).setInt32(b+0,s.insert(d),!0)}p(n).setInt32(r+4,u,!0),p(n).setInt32(r+0,f,!0)},c["rb-js-abi-host"]["reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool"]=function(o){return e.reflectPreventExtensions(s.get(o))?1:0},c["rb-js-abi-host"]["reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(o,r,n,i,a){const l=t("memory"),u=r,f=n,h=U.decode(new Uint8Array(l.buffer,u,f)),b=e.reflectSet(s.get(o),h,s.get(i));switch(b.tag){case"success":{const _=b.val;p(l).setInt8(a+0,0,!0),p(l).setInt32(a+4,s.insert(_),!0);break}case"failure":{const _=b.val;p(l).setInt8(a+0,1,!0),p(l).setInt32(a+4,s.insert(_),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool"]=function(o,r){return e.reflectSetPrototypeOf(s.get(o),s.get(r))?1:0},"canonical_abi"in c||(c.canonical_abi={});const s=new ee;c.canonical_abi["resource_drop_js-abi-value"]=o=>{const r=s.remove(o);e.dropJsAbiValue&&e.dropJsAbiValue(r)}}class Se extends de{async setInstance(e){await this.instantiate(e)}}class Fe{constructor(){}setUnderlying(e){this.underlying=e}rubyShowVersion(){this.underlying.rubyShowVersion()}rubyInit(){this.underlying.rubyInit()}rubySysinit(e){this.underlying.rubySysinit(e)}rubyOptions(e){this.underlying.rubyOptions(e)}rubyScript(e){this.underlying.rubyScript(e)}rubyInitLoadpath(){this.underlying.rubyInitLoadpath()}rbEvalStringProtect(e){return this.underlying.rbEvalStringProtect(e)}rbFuncallvProtect(e,t,s){return this.underlying.rbFuncallvProtect(e,t,s)}rbIntern(e){return this.underlying.rbIntern(e)}rbErrinfo(){return this.underlying.rbErrinfo()}rbClearErrinfo(){return this.underlying.rbClearErrinfo()}rstringPtr(e){return this.underlying.rstringPtr(e)}rbVmBugreport(){this.underlying.rbVmBugreport()}rbGcEnable(){return this.underlying.rbGcEnable()}rbGcDisable(){return this.underlying.rbGcDisable()}rbSetShouldProhibitRewind(e){return this.underlying.rbSetShouldProhibitRewind(e)}async setInstance(e){}addToImports(e){}}class _e{constructor(e){this.instance=null,this.interfaceState={hasJSFrameAfterRbFrame:!1};const t=s=>{const o=["setInstance","addToImports","instantiate","rbSetShouldProhibitRewind","rbGcDisable","rbGcEnable"],r=["constructor"].concat(o);for(const n of Object.getOwnPropertyNames(de.prototype)){if(r.includes(n))continue;const i=s[n];typeof i=="function"&&(s[n]=(...a)=>{if(this.interfaceState.hasJSFrameAfterRbFrame){const u=this.guest.rbSetShouldProhibitRewind(!0),f=this.guest.rbGcDisable(),h=Reflect.apply(i,s,a);return this.guest.rbSetShouldProhibitRewind(u),f||this.guest.rbGcEnable(),h}else return Reflect.apply(i,s,a)})}return s};this.guest=t(e??new Se),this.transport=new Oe,this.exceptionFormatter=new Ae}static async _instantiate(e,t){const s=new Fe,o=new _e(s);class r{constructor(l){this.underlying=l}}const n=o.getImports(a=>new r(a),a=>a.underlying),i=await e(Object.assign(Object.assign({},n),{throwProhibitRewindException:a=>{o.throwProhibitRewindException(a)},procToJsFunction:()=>{const a=new S(i.exportRbValueToJs(),o,o.privateObject());return new r((...l)=>a.call("call",...l.map(u=>o.wrap(u))).toJS())},rbObjectToJsRbValue:()=>{const a=new S(i.exportRbValueToJs(),o,o.privateObject());return new r(a)},JsAbiValue:r}));return s.setUnderlying(i),o.initialize(t.args),o}initialize(e=["ruby.wasm","-EUTF-8","-e_=0"]){const t=e.map(s=>s+"\0");this.guest.rubyInit(),this.guest.rubySysinit(t),this.guest.rubyOptions(t);try{this.eval('require "/bundle/setup"')}catch(s){console.warn("Failed to load /bundle/setup",s)}}async setInstance(e){this.instance=e,await this.guest.setInstance(e)}addToImports(e){this.guest.addToImports(e),e["rb-js-abi-host"]={rb_wasm_throw_prohibit_rewind_exception:(t,s)=>{const o=this.instance.exports.memory,r=new TextDecoder().decode(new Uint8Array(o.buffer,t,s));this.throwProhibitRewindException(r)}},ke(e,this.getImports(t=>t,t=>t),t=>this.instance.exports[t])}throwProhibitRewindException(e){let t=`Ruby APIs that may rewind the VM stack are prohibited under nested VM operation (${e})
Nested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby caused by something like \`window.rubyVM.eval("JS.global[:rubyVM].eval('Fiber.yield')")\`

Please check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:
  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)
     Note that \`evalAsync\` JS API switches fibers internally
  2. Raising uncaught exceptions
     Please catch all exceptions inside the nested operation
  3. Calling Continuation APIs
`;const s=new S(this.guest.rbErrinfo(),this,this.privateObject());throw s.call("nil?").toString()==="false"&&(t+=`
`+this.exceptionFormatter.format(s,this,this.privateObject())),new se(t)}getImports(e,t){const s=r=>{for(const[n,i]of Object.entries(r))typeof i=="function"&&(r[n]=(...a)=>{const l=this.interfaceState.hasJSFrameAfterRbFrame;this.interfaceState.hasJSFrameAfterRbFrame=!0;const u=Reflect.apply(i,r,a);return this.interfaceState.hasJSFrameAfterRbFrame=l,u});return r};function o(r){return(...n)=>{try{return{tag:"success",val:r(...n)}}catch(i){if(i instanceof se)throw i;return{tag:"failure",val:e(i)}}}}return s({evalJs:o(r=>e(Function(r)())),isJs:r=>!0,globalThis:()=>{if(typeof globalThis<"u")return e(globalThis);if(typeof global<"u")return e(global);if(typeof window<"u")return e(window);throw new Error("unable to locate global object")},intToJsNumber:r=>e(r),floatToJsNumber:r=>e(r),stringToJsString:r=>e(r),boolToJsBool:r=>e(r),procToJsFunction:r=>{const n=this.rbValueOfPointer(r);return e((...i)=>n.call("call",...i.map(a=>this.wrap(a))).toJS())},rbObjectToJsRbValue:r=>e(this.rbValueOfPointer(r)),jsValueToString:r=>(r=t(r),String(r)),jsValueToInteger(r){return r=t(r),typeof r=="number"?{tag:"as-float",val:r}:typeof r=="bigint"?{tag:"bignum",val:BigInt(r).toString(10)+"\0"}:typeof r=="string"?{tag:"bignum",val:r+"\0"}:typeof r>"u"?{tag:"as-float",val:0}:{tag:"as-float",val:Number(r)}},exportJsValueToHost:r=>{this.transport.takeJsValue(t(r))},importJsValueFromHost:()=>e(this.transport.consumeJsValue()),instanceOf:(r,n)=>(n=t(n),typeof n=="function"?t(r)instanceof n:!1),jsValueTypeof(r){return typeof t(r)},jsValueEqual(r,n){return t(r)==t(n)},jsValueStrictlyEqual(r,n){return t(r)===t(n)},reflectApply:o((r,n,i)=>{const a=i.map(l=>t(l));return e(Reflect.apply(t(r),t(n),a))}),reflectConstruct:function(r,n){throw new Error("Function not implemented.")},reflectDeleteProperty:function(r,n){throw new Error("Function not implemented.")},reflectGet:o((r,n)=>e(t(r)[n])),reflectGetOwnPropertyDescriptor:function(r,n){throw new Error("Function not implemented.")},reflectGetPrototypeOf:function(r){throw new Error("Function not implemented.")},reflectHas:function(r,n){throw new Error("Function not implemented.")},reflectIsExtensible:function(r){throw new Error("Function not implemented.")},reflectOwnKeys:function(r){throw new Error("Function not implemented.")},reflectPreventExtensions:function(r){throw new Error("Function not implemented.")},reflectSet:o((r,n,i)=>e(Reflect.set(t(r),n,t(i)))),reflectSetPrototypeOf:function(r,n){throw new Error("Function not implemented.")}})}printVersion(){this.guest.rubyShowVersion()}eval(e){return q(this,this.privateObject(),e)}evalAsync(e){const t=this.eval("require 'js'; JS");return pe(this,this.privateObject(),s=>{t.call("__eval_async_rb",this.wrap(e),s)})}wrap(e){return this.transport.importJsValue(e,this)}privateObject(){return{transport:this.transport,exceptionFormatter:this.exceptionFormatter}}rbValueOfPointer(e){const t=new V(e,this.guest);return new S(t,this,this.privateObject())}}class Oe{constructor(){this._takenJsValue=null}takeJsValue(e){this._takenJsValue=e}consumeJsValue(){return this._takenJsValue}exportJsValue(e){return e.call("__export_to_js"),this._takenJsValue}importJsValue(e,t){return this._takenJsValue=e,t.eval('require "js"; JS::Object').call("__import_from_js")}}class S{constructor(e,t,s){this.inner=e,this.vm=t,this.privateObject=s}call(e,...t){const s=t.map(o=>o.inner);return new S(ne(this.vm,this.privateObject,this.inner,e,s),this.vm,this.privateObject)}callAsync(e,...t){const s=this.vm.eval("require 'js'; JS");return pe(this.vm,this.privateObject,o=>{s.call("__call_async_method",this,this.vm.wrap(e),o,...t)})}[Symbol.toPrimitive](e){return e==="string"||e==="default"?this.toString():null}toString(){const e=ne(this.vm,this.privateObject,this.inner,"to_s",[]);return this.vm.guest.rstringPtr(e)}toJS(){const t=this.vm.eval("JS").call("try_convert",this);return t.call("nil?").toString()==="true"?null:this.privateObject.transport.exportJsValue(t)}}var I;(function(c){c[c.None=0]="None",c[c.Return=1]="Return",c[c.Break=2]="Break",c[c.Next=3]="Next",c[c.Retry=4]="Retry",c[c.Redo=5]="Redo",c[c.Raise=6]="Raise",c[c.Throw=7]="Throw",c[c.Fatal=8]="Fatal",c[c.Mask=15]="Mask"})(I||(I={}));class Ae{constructor(){this.literalsCache=null,this.isFormmatting=!1}format(e,t,s){class o extends Error{}if(this.isFormmatting)throw new o("Unexpected exception occurred during formatting exception message");this.isFormmatting=!0;try{return this._format(e,t,s)}finally{this.isFormmatting=!1}}_format(e,t,s){const[o,r,n]=(()=>{if(this.literalsCache==null){const u=[q(t,s,"0"),q(t,s,"1"),q(t,s,`"
"`)];return this.literalsCache=u,u}else return this.literalsCache})();let i,a,l;try{i=e.call("class").toString()}catch{i="unknown"}try{l=e.call("message").toString()}catch{l="unknown"}try{a=e.call("backtrace")}catch{return this.formatString(i,l)}if(a.call("nil?").toString()==="true")return this.formatString(i,l);try{const u=a.call("at",o),f=a.call("drop",r).call("join",n);return this.formatString(i,l,[u.toString(),f.toString()])}catch{return this.formatString(i,l)}}formatString(e,t,s){return s?`${s[0]}: ${t} (${e})
${s[1]}`:`${e}: ${t}`}}const be=(c,e,t)=>{switch(c&I.Mask){case I.None:break;case I.Return:throw new j("unexpected return");case I.Next:throw new j("unexpected next");case I.Break:throw new j("unexpected break");case I.Redo:throw new j("unexpected redo");case I.Retry:throw new j("retry outside of rescue clause");case I.Throw:throw new j("unexpected throw");case I.Raise:case I.Fatal:const s=new S(e.guest.rbErrinfo(),e,t);throw s.call("nil?").toString()==="true"?new j("no exception object"):(e.guest.rbClearErrinfo(),new j(t.exceptionFormatter.format(s,e,t)));default:throw new j(`unknown error tag: ${c}`)}};function ge(c,e){try{return e()}catch(t){if(t instanceof j)throw t;try{c.guest.rbVmBugreport()}catch(s){console.error("Tried to report internal Ruby VM state but failed: ",s)}if(t instanceof WebAssembly.RuntimeError&&t.message==="unreachable"){const s=new j(`Something went wrong in Ruby VM: ${t}`);throw s.stack=t.stack,s}else throw t}}const ne=(c,e,t,s,o)=>{const r=c.guest.rbIntern(s+"\0");return ge(c,()=>{const[n,i]=c.guest.rbFuncallvProtect(t,r,o);return be(i,c,e),n})},q=(c,e,t)=>ge(c,()=>{const[s,o]=c.guest.rbEvalStringProtect(t+"\0");return be(o,c,e),new S(s,c,e)});function pe(c,e,t){return new Promise((s,o)=>{const r=c.wrap({resolve:s,reject:n=>{const i=new j(e.exceptionFormatter.format(n,c,e));o(i)}});t(r)})}class j extends Error{constructor(e){super(e)}}class se extends j{constructor(e){super("Ruby Fatal Error: "+e)}}const ie=0,ae=1,y=0,g=8,W=20,B=28,oe=31,De=37,O=44,Ne=52,F=54,le=55,m=58,L=63,ue=76,C=64;class J{static read_bytes(e,t){const s=new J;return s.buf=e.getUint32(t,!0),s.buf_len=e.getUint32(t+4,!0),s}static read_bytes_array(e,t,s){const o=[];for(let r=0;r<s;r++)o.push(J.read_bytes(e,t+8*r));return o}}class z{static read_bytes(e,t){const s=new z;return s.buf=e.getUint32(t,!0),s.buf_len=e.getUint32(t+4,!0),s}static read_bytes_array(e,t,s){const o=[];for(let r=0;r<s;r++)o.push(z.read_bytes(e,t+8*r));return o}}const ye=0,we=1,$=2,ce=2,E=3,D=4;class Q{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(e,t){e.setBigUint64(t,this.d_next,!0),e.setBigUint64(t+8,this.d_ino,!0),e.setUint32(t+16,this.dir_name.length,!0),e.setUint8(t+20,this.d_type)}write_name_bytes(e,t,s){e.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,s)),t)}constructor(e,t,s){this.d_ino=0n;const o=new TextEncoder().encode(t);this.d_next=e,this.d_namlen=o.byteLength,this.d_type=s,this.dir_name=o}}const me=1;class Y{write_bytes(e,t){e.setUint8(t,this.fs_filetype),e.setUint16(t+2,this.fs_flags,!0),e.setBigUint64(t+8,this.fs_rights_base,!0),e.setBigUint64(t+16,this.fs_rights_inherited,!0)}constructor(e,t){this.fs_rights_base=0n,this.fs_rights_inherited=0n,this.fs_filetype=e,this.fs_flags=t}}const Z=1,P=2,fe=4,H=8;class G{write_bytes(e,t){e.setBigUint64(t,this.dev,!0),e.setBigUint64(t+8,this.ino,!0),e.setUint8(t+16,this.filetype),e.setBigUint64(t+24,this.nlink,!0),e.setBigUint64(t+32,this.size,!0),e.setBigUint64(t+38,this.atim,!0),e.setBigUint64(t+46,this.mtim,!0),e.setBigUint64(t+52,this.ctim,!0)}constructor(e,t){this.dev=0n,this.ino=0n,this.nlink=0n,this.atim=0n,this.mtim=0n,this.ctim=0n,this.filetype=e,this.size=t}}const Be=0;class Pe{write_bytes(e,t){e.setUint32(t,this.pr_name.byteLength,!0)}constructor(e){this.pr_name=new TextEncoder().encode(e)}}class te{static dir(e){const t=new te;return t.tag=Be,t.inner=new Pe(e),t}write_bytes(e,t){e.setUint32(t,this.tag,!0),this.inner.write_bytes(e,t+4)}}let Ve=class{enable(e){this.log=Le(e===void 0?!0:e,this.prefix)}get enabled(){return this.isEnabled}constructor(e){this.isEnabled=e,this.prefix="wasi:",this.enable(e)}};function Le(c,e){return c?console.log.bind(console,"%c%s","color: #265BA0",e):()=>{}}const x=new Ve(!1);class he extends Error{constructor(e){super("exit with exit code "+e),this.code=e}}let Me=class{start(e){this.inst=e;try{return e.exports._start(),0}catch(t){if(t instanceof he)return t.code;throw t}}initialize(e){this.inst=e,e.exports._initialize&&e.exports._initialize()}constructor(e,t,s,o={}){this.args=[],this.env=[],this.fds=[],x.enable(o.debug),this.args=e,this.env=t,this.fds=s;const r=this;this.wasiImport={args_sizes_get(n,i){const a=new DataView(r.inst.exports.memory.buffer);a.setUint32(n,r.args.length,!0);let l=0;for(const u of r.args)l+=u.length+1;return a.setUint32(i,l,!0),x.log(a.getUint32(n,!0),a.getUint32(i,!0)),0},args_get(n,i){const a=new DataView(r.inst.exports.memory.buffer),l=new Uint8Array(r.inst.exports.memory.buffer),u=i;for(let f=0;f<r.args.length;f++){a.setUint32(n,i,!0),n+=4;const h=new TextEncoder().encode(r.args[f]);l.set(h,i),a.setUint8(i+h.length,0),i+=h.length+1}return x.enabled&&x.log(new TextDecoder("utf-8").decode(l.slice(u,i))),0},environ_sizes_get(n,i){const a=new DataView(r.inst.exports.memory.buffer);a.setUint32(n,r.env.length,!0);let l=0;for(const u of r.env)l+=u.length+1;return a.setUint32(i,l,!0),x.log(a.getUint32(n,!0),a.getUint32(i,!0)),0},environ_get(n,i){const a=new DataView(r.inst.exports.memory.buffer),l=new Uint8Array(r.inst.exports.memory.buffer),u=i;for(let f=0;f<r.env.length;f++){a.setUint32(n,i,!0),n+=4;const h=new TextEncoder().encode(r.env[f]);l.set(h,i),a.setUint8(i+h.length,0),i+=h.length+1}return x.enabled&&x.log(new TextDecoder("utf-8").decode(l.slice(u,i))),0},clock_res_get(n,i){let a;switch(n){case ae:{a=5000n;break}case ie:{a=1000000n;break}default:return Ne}return new DataView(r.inst.exports.memory.buffer).setBigUint64(i,a,!0),y},clock_time_get(n,i,a){const l=new DataView(r.inst.exports.memory.buffer);if(n===ie)l.setBigUint64(a,BigInt(new Date().getTime())*1000000n,!0);else if(n==ae){let u;try{u=BigInt(Math.round(performance.now()*1e6))}catch{u=0n}l.setBigUint64(a,u,!0)}else l.setBigUint64(a,0n,!0);return 0},fd_advise(n,i,a,l){return r.fds[n]!=null?y:g},fd_allocate(n,i,a){return r.fds[n]!=null?r.fds[n].fd_allocate(i,a):g},fd_close(n){if(r.fds[n]!=null){const i=r.fds[n].fd_close();return r.fds[n]=void 0,i}else return g},fd_datasync(n){return r.fds[n]!=null?r.fds[n].fd_sync():g},fd_fdstat_get(n,i){if(r.fds[n]!=null){const{ret:a,fdstat:l}=r.fds[n].fd_fdstat_get();return l!=null&&l.write_bytes(new DataView(r.inst.exports.memory.buffer),i),a}else return g},fd_fdstat_set_flags(n,i){return r.fds[n]!=null?r.fds[n].fd_fdstat_set_flags(i):g},fd_fdstat_set_rights(n,i,a){return r.fds[n]!=null?r.fds[n].fd_fdstat_set_rights(i,a):g},fd_filestat_get(n,i){if(r.fds[n]!=null){const{ret:a,filestat:l}=r.fds[n].fd_filestat_get();return l!=null&&l.write_bytes(new DataView(r.inst.exports.memory.buffer),i),a}else return g},fd_filestat_set_size(n,i){return r.fds[n]!=null?r.fds[n].fd_filestat_set_size(i):g},fd_filestat_set_times(n,i,a,l){return r.fds[n]!=null?r.fds[n].fd_filestat_set_times(i,a,l):g},fd_pread(n,i,a,l,u){const f=new DataView(r.inst.exports.memory.buffer),h=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const d=J.read_bytes_array(f,i,a);let b=0;for(const _ of d){const{ret:w,data:v}=r.fds[n].fd_pread(_.buf_len,l);if(w!=y)return f.setUint32(u,b,!0),w;if(h.set(v,_.buf),b+=v.length,l+=BigInt(v.length),v.length!=_.buf_len)break}return f.setUint32(u,b,!0),y}else return g},fd_prestat_get(n,i){const a=new DataView(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const{ret:l,prestat:u}=r.fds[n].fd_prestat_get();return u!=null&&u.write_bytes(a,i),l}else return g},fd_prestat_dir_name(n,i,a){if(r.fds[n]!=null){const{ret:l,prestat:u}=r.fds[n].fd_prestat_get();if(u==null)return l;const f=u.inner.pr_name;return new Uint8Array(r.inst.exports.memory.buffer).set(f.slice(0,a),i),f.byteLength>a?De:y}else return g},fd_pwrite(n,i,a,l,u){const f=new DataView(r.inst.exports.memory.buffer),h=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const d=z.read_bytes_array(f,i,a);let b=0;for(const _ of d){const w=h.slice(_.buf,_.buf+_.buf_len),{ret:v,nwritten:N}=r.fds[n].fd_pwrite(w,l);if(v!=y)return f.setUint32(u,b,!0),v;if(b+=N,l+=BigInt(N),N!=w.byteLength)break}return f.setUint32(u,b,!0),y}else return g},fd_read(n,i,a,l){const u=new DataView(r.inst.exports.memory.buffer),f=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const h=J.read_bytes_array(u,i,a);let d=0;for(const b of h){const{ret:_,data:w}=r.fds[n].fd_read(b.buf_len);if(_!=y)return u.setUint32(l,d,!0),_;if(f.set(w,b.buf),d+=w.length,w.length!=b.buf_len)break}return u.setUint32(l,d,!0),y}else return g},fd_readdir(n,i,a,l,u){const f=new DataView(r.inst.exports.memory.buffer),h=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){let d=0;for(;;){const{ret:b,dirent:_}=r.fds[n].fd_readdir_single(l);if(b!=0)return f.setUint32(u,d,!0),b;if(_==null)break;if(a-d<_.head_length()){d=a;break}const w=new ArrayBuffer(_.head_length());if(_.write_head_bytes(new DataView(w),0),h.set(new Uint8Array(w).slice(0,Math.min(w.byteLength,a-d)),i),i+=_.head_length(),d+=_.head_length(),a-d<_.name_length()){d=a;break}_.write_name_bytes(h,i,a-d),i+=_.name_length(),d+=_.name_length(),l=_.d_next}return f.setUint32(u,d,!0),0}else return g},fd_renumber(n,i){if(r.fds[n]!=null&&r.fds[i]!=null){const a=r.fds[i].fd_close();return a!=0?a:(r.fds[i]=r.fds[n],r.fds[n]=void 0,0)}else return g},fd_seek(n,i,a,l){const u=new DataView(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const{ret:f,offset:h}=r.fds[n].fd_seek(i,a);return u.setBigInt64(l,h,!0),f}else return g},fd_sync(n){return r.fds[n]!=null?r.fds[n].fd_sync():g},fd_tell(n,i){const a=new DataView(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const{ret:l,offset:u}=r.fds[n].fd_tell();return a.setBigUint64(i,u,!0),l}else return g},fd_write(n,i,a,l){const u=new DataView(r.inst.exports.memory.buffer),f=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const h=z.read_bytes_array(u,i,a);let d=0;for(const b of h){const _=f.slice(b.buf,b.buf+b.buf_len),{ret:w,nwritten:v}=r.fds[n].fd_write(_);if(w!=y)return u.setUint32(l,d,!0),w;if(d+=v,v!=_.byteLength)break}return u.setUint32(l,d,!0),y}else return g},path_create_directory(n,i,a){const l=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(i,i+a));return r.fds[n].path_create_directory(u)}else return g},path_filestat_get(n,i,a,l,u){const f=new DataView(r.inst.exports.memory.buffer),h=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const d=new TextDecoder("utf-8").decode(h.slice(a,a+l)),{ret:b,filestat:_}=r.fds[n].path_filestat_get(i,d);return _!=null&&_.write_bytes(f,u),b}else return g},path_filestat_set_times(n,i,a,l,u,f,h){const d=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const b=new TextDecoder("utf-8").decode(d.slice(a,a+l));return r.fds[n].path_filestat_set_times(i,b,u,f,h)}else return g},path_link(n,i,a,l,u,f,h){const d=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null&&r.fds[u]!=null){const b=new TextDecoder("utf-8").decode(d.slice(a,a+l)),_=new TextDecoder("utf-8").decode(d.slice(f,f+h)),{ret:w,inode_obj:v}=r.fds[n].path_lookup(b,i);return v==null?w:r.fds[u].path_link(_,v,!1)}else return g},path_open(n,i,a,l,u,f,h,d,b){const _=new DataView(r.inst.exports.memory.buffer),w=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const v=new TextDecoder("utf-8").decode(w.slice(a,a+l));x.log(v);const{ret:N,fd_obj:Ie}=r.fds[n].path_open(i,v,u,f,h,d);if(N!=0)return N;r.fds.push(Ie);const Ee=r.fds.length-1;return _.setUint32(b,Ee,!0),0}else return g},path_readlink(n,i,a,l,u,f){const h=new DataView(r.inst.exports.memory.buffer),d=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const b=new TextDecoder("utf-8").decode(d.slice(i,i+a));x.log(b);const{ret:_,data:w}=r.fds[n].path_readlink(b);if(w!=null){const v=new TextEncoder().encode(w);if(v.length>u)return h.setUint32(f,0,!0),g;d.set(v,l),h.setUint32(f,v.length,!0)}return _}else return g},path_remove_directory(n,i,a){const l=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(i,i+a));return r.fds[n].path_remove_directory(u)}else return g},path_rename(n,i,a,l,u,f){const h=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null&&r.fds[l]!=null){const d=new TextDecoder("utf-8").decode(h.slice(i,i+a)),b=new TextDecoder("utf-8").decode(h.slice(u,u+f));let{ret:_,inode_obj:w}=r.fds[n].path_unlink(d);if(w==null)return _;if(_=r.fds[l].path_link(b,w,!0),_!=y&&r.fds[n].path_link(d,w,!0)!=y)throw"path_link should always return success when relinking an inode back to the original place";return _}else return g},path_symlink(n,i,a,l,u){const f=new Uint8Array(r.inst.exports.memory.buffer);return r.fds[a]!=null?(new TextDecoder("utf-8").decode(f.slice(n,n+i)),new TextDecoder("utf-8").decode(f.slice(l,l+u)),m):g},path_unlink_file(n,i,a){const l=new Uint8Array(r.inst.exports.memory.buffer);if(r.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(i,i+a));return r.fds[n].path_unlink_file(u)}else return g},poll_oneoff(n,i,a){throw"async io not supported"},proc_exit(n){throw new he(n)},proc_raise(n){throw"raised signal "+n},sched_yield(){},random_get(n,i){const a=new Uint8Array(r.inst.exports.memory.buffer);for(let l=0;l<i;l++)a[n+l]=Math.random()*256|0},sock_recv(n,i,a){throw"sockets not supported"},sock_send(n,i,a){throw"sockets not supported"},sock_shutdown(n,i){throw"sockets not supported"},sock_accept(n,i){throw"sockets not supported"}}}};class K{fd_allocate(e,t){return m}fd_close(){return 0}fd_fdstat_get(){return{ret:m,fdstat:null}}fd_fdstat_set_flags(e){return m}fd_fdstat_set_rights(e,t){return m}fd_filestat_get(){return{ret:m,filestat:null}}fd_filestat_set_size(e){return m}fd_filestat_set_times(e,t,s){return m}fd_pread(e,t){return{ret:m,data:new Uint8Array}}fd_prestat_get(){return{ret:m,prestat:null}}fd_pwrite(e,t){return{ret:m,nwritten:0}}fd_read(e){return{ret:m,data:new Uint8Array}}fd_readdir_single(e){return{ret:m,dirent:null}}fd_seek(e,t){return{ret:m,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:m,offset:0n}}fd_write(e){return{ret:m,nwritten:0}}path_create_directory(e){return m}path_filestat_get(e,t){return{ret:m,filestat:null}}path_filestat_set_times(e,t,s,o,r){return m}path_link(e,t,s){return m}path_unlink(e){return{ret:m,inode_obj:null}}path_lookup(e,t){return{ret:m,inode_obj:null}}path_open(e,t,s,o,r,n){return{ret:F,fd_obj:null}}path_readlink(e){return{ret:m,data:null}}path_remove_directory(e){return m}path_rename(e,t,s){return m}path_unlink_file(e){return m}}class re{}class Ce extends K{fd_allocate(e,t){if(!(this.file.size>e+t)){const s=new Uint8Array(Number(e+t));s.set(this.file.data,0),this.file.data=s}return y}fd_fdstat_get(){return{ret:0,fdstat:new Y(D,0)}}fd_filestat_set_size(e){if(this.file.size>e)this.file.data=new Uint8Array(this.file.data.buffer.slice(0,Number(e)));else{const t=new Uint8Array(Number(e));t.set(this.file.data,0),this.file.data=t}return y}fd_read(e){const t=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(e)));return this.file_pos+=BigInt(t.length),{ret:0,data:t}}fd_pread(e,t){return{ret:0,data:this.file.data.slice(Number(t),Number(t+BigInt(e)))}}fd_seek(e,t){let s;switch(t){case ye:s=e;break;case we:s=this.file_pos+e;break;case $:s=BigInt(this.file.data.byteLength)+e;break;default:return{ret:B,offset:0n}}return s<0?{ret:B,offset:0n}:(this.file_pos=s,{ret:0,offset:this.file_pos})}fd_tell(){return{ret:0,offset:this.file_pos}}fd_write(e){if(this.file.readonly)return{ret:g,nwritten:0};if(this.file_pos+BigInt(e.byteLength)>this.file.size){const t=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(e.byteLength))),this.file.data.set(t)}return this.file.data.set(e,Number(this.file_pos)),this.file_pos+=BigInt(e.byteLength),{ret:0,nwritten:e.byteLength}}fd_pwrite(e,t){if(this.file.readonly)return{ret:g,nwritten:0};if(t+BigInt(e.byteLength)>this.file.size){const s=this.file.data;this.file.data=new Uint8Array(Number(t+BigInt(e.byteLength))),this.file.data.set(s)}return this.file.data.set(e,Number(t)),{ret:0,nwritten:e.byteLength}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(e){super(),this.file_pos=0n,this.file=e}}class ve extends K{fd_seek(e,t){return{ret:g,offset:0n}}fd_tell(){return{ret:g,offset:0n}}fd_allocate(e,t){return g}fd_fdstat_get(){return{ret:0,fdstat:new Y(E,0)}}fd_readdir_single(e){if(x.enabled&&(x.log("readdir_single",e),x.log(e,this.dir.contents.keys())),e==0n)return{ret:y,dirent:new Q(1n,".",E)};if(e==1n)return{ret:y,dirent:new Q(2n,"..",E)};if(e>=BigInt(this.dir.contents.size)+2n)return{ret:0,dirent:null};const[t,s]=Array.from(this.dir.contents.entries())[Number(e-2n)];return{ret:0,dirent:new Q(e+1n,t,s.stat().filetype)}}path_filestat_get(e,t){const{ret:s,path:o}=T.from(t);if(o==null)return{ret:s,filestat:null};const{ret:r,entry:n}=this.dir.get_entry_for_path(o);return n==null?{ret:r,filestat:null}:{ret:0,filestat:n.stat()}}path_lookup(e,t){const{ret:s,path:o}=T.from(e);if(o==null)return{ret:s,inode_obj:null};const{ret:r,entry:n}=this.dir.get_entry_for_path(o);return n==null?{ret:r,inode_obj:null}:{ret:y,inode_obj:n}}path_open(e,t,s,o,r,n){const{ret:i,path:a}=T.from(t);if(a==null)return{ret:i,fd_obj:null};let{ret:l,entry:u}=this.dir.get_entry_for_path(a);if(u==null){if(l!=O)return{ret:l,fd_obj:null};if((s&Z)==Z){const{ret:f,entry:h}=this.dir.create_entry_for_path(t,(s&P)==P);if(h==null)return{ret:f,fd_obj:null};u=h}else return{ret:O,fd_obj:null}}else if((s&fe)==fe)return{ret:W,fd_obj:null};return(s&P)==P&&u.stat().filetype!==E?{ret:F,fd_obj:null}:u.path_open(s,o,n)}path_create_directory(e){return this.path_open(0,e,Z|P,0n,0n,0).ret}path_link(e,t,s){const{ret:o,path:r}=T.from(e);if(r==null)return o;if(r.is_dir)return O;const{ret:n,parent_entry:i,filename:a,entry:l}=this.dir.get_parent_dir_and_entry_for_path(r,!0);if(i==null||a==null)return n;if(l!=null){const u=t.stat().filetype==E,f=l.stat().filetype==E;if(u&&f)if(s&&l instanceof A){if(l.contents.size!=0)return le}else return W;else{if(u&&!f)return F;if(!u&&f)return oe;if(!(t.stat().filetype==D&&l.stat().filetype==D))return W}}return!s&&t.stat().filetype==E?L:(i.contents.set(a,t),y)}path_unlink(e){const{ret:t,path:s}=T.from(e);if(s==null)return{ret:t,inode_obj:null};const{ret:o,parent_entry:r,filename:n,entry:i}=this.dir.get_parent_dir_and_entry_for_path(s,!0);return r==null||n==null?{ret:o,inode_obj:null}:i==null?{ret:O,inode_obj:null}:(r.contents.delete(n),{ret:y,inode_obj:i})}path_unlink_file(e){const{ret:t,path:s}=T.from(e);if(s==null)return t;const{ret:o,parent_entry:r,filename:n,entry:i}=this.dir.get_parent_dir_and_entry_for_path(s,!1);return r==null||n==null||i==null?o:i.stat().filetype===E?oe:(r.contents.delete(n),y)}path_remove_directory(e){const{ret:t,path:s}=T.from(e);if(s==null)return t;const{ret:o,parent_entry:r,filename:n,entry:i}=this.dir.get_parent_dir_and_entry_for_path(s,!1);return r==null||n==null||i==null?o:!(i instanceof A)||i.stat().filetype!==E?F:i.contents.size!==0?le:r.contents.delete(n)?y:O}fd_filestat_get(){return{ret:0,filestat:this.dir.stat()}}fd_filestat_set_size(e){return g}fd_read(e){return{ret:g,data:new Uint8Array}}fd_pread(e,t){return{ret:g,data:new Uint8Array}}fd_write(e){return{ret:g,nwritten:0}}fd_pwrite(e,t){return{ret:g,nwritten:0}}constructor(e){super(),this.dir=e}}class We extends ve{fd_prestat_get(){return{ret:0,prestat:te.dir(this.prestat_name)}}constructor(e,t){super(new A(t)),this.prestat_name=e}}class Je extends re{path_open(e,t,s){if(this.readonly&&(t&BigInt(C))==BigInt(C))return{ret:L,fd_obj:null};if((e&H)==H){if(this.readonly)return{ret:L,fd_obj:null};this.data=new Uint8Array([])}const o=new Ce(this);return s&me&&o.fd_seek(0n,$),{ret:y,fd_obj:o}}get size(){return BigInt(this.data.byteLength)}stat(){return new G(D,this.size)}constructor(e,t){super(),this.data=new Uint8Array(e),this.readonly=!!(t!=null&&t.readonly)}}let T=class xe{static from(e){const t=new xe;if(t.is_dir=e.endsWith("/"),e.startsWith("/"))return{ret:ue,path:null};if(e.includes("\0"))return{ret:B,path:null};for(const s of e.split("/"))if(!(s===""||s===".")){if(s===".."){if(t.parts.pop()==null)return{ret:ue,path:null};continue}t.parts.push(s)}return{ret:y,path:t}}to_path_string(){let e=this.parts.join("/");return this.is_dir&&(e+="/"),e}constructor(){this.parts=[],this.is_dir=!1}};class A extends re{path_open(e,t,s){return{ret:y,fd_obj:new ve(this)}}stat(){return new G(E,0n)}get_entry_for_path(e){let t=this;for(const s of e.parts){if(!(t instanceof A))return{ret:F,entry:null};const o=t.contents.get(s);if(o!==void 0)t=o;else return x.log(s),{ret:O,entry:null}}return e.is_dir&&t.stat().filetype!=E?{ret:F,entry:null}:{ret:y,entry:t}}get_parent_dir_and_entry_for_path(e,t){const s=e.parts.pop();if(s===void 0)return{ret:B,parent_entry:null,filename:null,entry:null};const{ret:o,entry:r}=this.get_entry_for_path(e);if(r==null)return{ret:o,parent_entry:null,filename:null,entry:null};if(!(r instanceof A))return{ret:F,parent_entry:null,filename:null,entry:null};const n=r.contents.get(s);return n===void 0?t?{ret:y,parent_entry:r,filename:s,entry:null}:{ret:O,parent_entry:null,filename:null,entry:null}:e.is_dir&&n.stat().filetype!=E?{ret:F,parent_entry:null,filename:null,entry:null}:{ret:y,parent_entry:r,filename:s,entry:n}}create_entry_for_path(e,t){const{ret:s,path:o}=T.from(e);if(o==null)return{ret:s,entry:null};let{ret:r,parent_entry:n,filename:i,entry:a}=this.get_parent_dir_and_entry_for_path(o,!0);if(n==null||i==null)return{ret:r,entry:null};if(a!=null)return{ret:W,entry:null};x.log("create",o);let l;return t?l=new A(new Map):l=new Je(new ArrayBuffer(0)),n.contents.set(i,l),a=l,{ret:y,entry:a}}constructor(e){super(),e instanceof Array?this.contents=new Map(e):this.contents=e}}class je extends K{fd_filestat_get(){return{ret:0,filestat:new G(ce,BigInt(0))}}fd_fdstat_get(){const e=new Y(ce,0);return e.fs_rights_base=BigInt(C),{ret:0,fdstat:e}}fd_write(e){return this.write(e),{ret:0,nwritten:e.byteLength}}static lineBuffered(e){const t=new TextDecoder("utf-8",{fatal:!1});let s="";return new je(o=>{s+=t.decode(o,{stream:!0});const r=s.split(`
`);for(const[n,i]of r.entries())n<r.length-1?e(i):s=i})}constructor(e){super(),this.write=e}}class He extends re{path_open(e,t,s){if(this.readonly&&(t&BigInt(C))==BigInt(C))return{ret:L,fd_obj:null};if((e&H)==H){if(this.readonly)return{ret:L,fd_obj:null};this.handle.truncate(0)}const o=new ze(this);return s&me&&o.fd_seek(0n,$),{ret:y,fd_obj:o}}get size(){return BigInt(this.handle.getSize())}stat(){return new G(D,this.size)}constructor(e,t){super(),this.handle=e,this.readonly=!!(t!=null&&t.readonly)}}class ze extends K{fd_allocate(e,t){return BigInt(this.file.handle.getSize())>e+t||this.file.handle.truncate(Number(e+t)),y}fd_fdstat_get(){return{ret:0,fdstat:new Y(D,0)}}fd_filestat_get(){return{ret:0,filestat:new G(D,BigInt(this.file.handle.getSize()))}}fd_filestat_set_size(e){return this.file.handle.truncate(Number(e)),y}fd_read(e){const t=new Uint8Array(e),s=this.file.handle.read(t,{at:Number(this.position)});return this.position+=BigInt(s),{ret:0,data:t.slice(0,s)}}fd_seek(e,t){let s;switch(t){case ye:s=BigInt(e);break;case we:s=this.position+BigInt(e);break;case $:s=BigInt(this.file.handle.getSize())+BigInt(e);break;default:return{ret:B,offset:0n}}return s<0?{ret:B,offset:0n}:(this.position=s,{ret:y,offset:this.position})}fd_write(e){if(this.file.readonly)return{ret:g,nwritten:0};const t=this.file.handle.write(e,{at:Number(this.position)});return this.position+=BigInt(t),{ret:y,nwritten:t}}fd_sync(){return this.file.handle.flush(),y}constructor(e){super(),this.position=0n,this.file=e}}export{je as C,A as D,Je as F,Ce as O,We as P,_e as R,He as S,Me as W};
